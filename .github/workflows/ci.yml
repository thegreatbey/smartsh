name: CI

permissions:
  contents: write

on:
  push:
    branches: [main, master]
  pull_request:

jobs:
  test:
    name: Node ${{ matrix.node }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node: [22]
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build TypeScript
        run: npm run build

      - name: Type check (lint)
        run: npx tsc --noEmit

      - name: Run tests
        run: npm test
        env:
          NODE_OPTIONS: "--experimental-vm-modules"


  bump:
    name: Bump patch version if code changed
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'

      - name: Detect code changes
        id: changes
        run: |
          # Ensure we have at least the previous commit available
          git fetch --prune --unshallow || true
          # Compare current commit (HEAD) with the previous one (HEAD~1)
          if git diff --quiet HEAD~1 HEAD -- src/ package.json tsconfig.json tsup.config.ts; then
            echo "No relevant source changes detected"
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "Source code changes detected"
            git diff --name-only HEAD~1 HEAD -- src/ package.json tsconfig.json tsup.config.ts
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Build TypeScript (sanity-check before version bump)
        if: steps.changes.outputs.changed == 'true'
        run: npm run build

      - name: Bump patch, tag and push
        if: steps.changes.outputs.changed == 'true'
        run: |
          npm ci
          npm run bump:patch
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"
          VERSION=$(node -p "require('./package.json').version")
          git commit -am "chore: release v$VERSION [skip ci]"
          git tag "v$VERSION"
          git push --follow-tags 